#pragma once

#include <furi/core/common_defines.h>

namespace cookie {

// RAII for FURI_CRITICAL
class ScopedFuriCritical {
public:
    ScopedFuriCritical()
        : m_info(__furi_critical_enter()) {
    }

    ~ScopedFuriCritical() {
        __furi_critical_exit(m_info);
    }

private:
    __FuriCriticalInfo m_info;
};

// Function to allow passing C++11 enum classes as Furi uint32_t parameters
template <typename T>
FURI_ALWAYS_INLINE constexpr uint32_t FuriEnumParam(T val) {
    return static_cast<uint32_t>(val);
}

}
